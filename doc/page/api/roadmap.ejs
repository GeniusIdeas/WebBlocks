<h2>Roadmap</h2>

<p>The current stable release version of WebBlocks is <strong>Version 1.0</strong>. Bugs reports for WebBlocks v1.0 should be reported to the GitHub issue tracker under <a href="https://github.com/ucla/WebBlocks/issues?milestone=11&state=open" target="_blank">Milestone v1.0.xx</a>.</p>

<p>The current development branch of WebBlocks is <strong>Version 1.1</strong>, currently in early-stage development. Feature requests should be made for WebBlocks v1.1 in the GitHub issue tracker under <a href="https://github.com/ucla/WebBlocks/issues?milestone=9" target="_blank">Milestone v1.1.xx</a>.</p>

<p>The next development version of WebBlocks is <strong>Version 2.0</strong>, currently in early-stage planning and prototyping. Feature requests should be made for WebBlocks v2.0 under the <a href="https://github.com/WebBlocks/WebBlocks" target="_blank">WebBlocks/WebBlocks</a> project.</p>

<hr>

<h3>WebBlocks 1.0</h3>

<p>WebBlocks 1.0 is currently <span class="badge success">STABLE RELEASE</span></p>

<h4 class="text-highlight">Version History</h4>

<p>As of June 21, 2013, WebBlocks 1.0 is a <strong>stable release version</strong>.</p>

<ul>
    <li><strong><a href="https://github.com/ucla/WebBlocks/releases/tag/v1.0.09" target="_blank">July 29, 2013 - v1.0.09</a></strong><br><em class="text-neutral">maintenance release version</em></li>
    <li><strong><a href="https://github.com/ucla/WebBlocks/releases/tag/v1.0.08" target="_blank">June 21, 2013 - v1.0.08</a></strong><br><em class="text-neutral">release of Golden Master</em></li>
    <li><strong><a href="https://github.com/ucla/WebBlocks/releases/tag/v1.0.07" target="_blank">March 5, 2013 - v0.1.07</a></strong><br><em class="text-neutral">release of Beta 2</em></li>
    <li><strong><a href="https://github.com/ucla/WebBlocks/releases/tag/v1.0.06" target="_blank">February 22, 2013 - v0.1.06</a></strong><br><em class="text-neutral">release of Beta 1</em></li>
    <li><strong>November 21, 2012 - v0.1.04</strong><br><em class="text-neutral">release of first development version with current architecture</em></li>
    <li><strong>September 28, 2012 - v0.1.00</strong><br><em class="text-neutral">release of first development version</em></li>
    <li><strong>May 14, 2012</strong><br><em class="text-neutral">project inception</em></li>
</ul>

<p>Known issues may be found under <a href="https://github.com/ucla/WebBlocks/issues?milestone=13&state=open" target="_blank">Milestone v1.0.10</a> and <a href="https://github.com/ucla/WebBlocks/issues?milestone=11&state=open" target="_blank">Milestone v1.0.xx</a>; the former contains issues slated for the next revision release, while the latter contains new issue not yet slated for a particular revision release.</p>

<hr>

<h3>WebBlocks 1.1</h3>

<p>WebBlocks 1.1 is currently <span class="badge danger">EARLY-STAGE DEVELOPMENT</span></p>

<p>While early-stage developmet is beginning, features may still be requested under <a href="https://github.com/ucla/WebBlocks/issues?milestone=9&state=open" target="_blank">Milestone v1.1.xx</a>.</p>

<h4 class="text-highlight">Planned Features</h4>

<p>The following is a non-exhaustive list of featured planned for WebBlocks v1.1:</p>

<h5>Rich User Interfaces</h5>

<p>The <a href="https://github.com/ucla/WebBlocks/wiki/Subgroup%3A-Rich-User-Interfaces" target="_blank">Rich User Interfaces subgroup</a> has  prioritized the following features for WebBlocks v1.1:</p>

<ul>
    <li>Mega-menu (new)</li>
    <li>Slideshow (new)</li>
    <li>Gallery (new)</li>
    <li>Calendar (new)</li>
    <li>Navbar (enhancements)</li>
</ul>

<h5>Text and Media</h5>

<p>The <a href="https://github.com/ucla/WebBlocks/wiki/Subgroup%3A-Text-and-Media" target="_blank">Text and Media subgroup</a> has prioritized the following features for WebBlocks v1.1:</p>

<ul>
    <li>Linearized table</li>
    <li>Scrollable table</li>
    <li><code>img[srcset]</code> support</li>
    <li><code>picture</code> support</li>
    <li>Adaptive Images integration</li>
    <li>Cookie-based Client Hints support</li>
    <li>Responsive Video (to be defined)</li>
    <li>Font Asset packaging in compiler</li>
    <li>Font multi-platform support</li>
    <li>Print Sheet support</li>
    <li><code>rem</code> unit support</li>
    <li>Code syntax highlighting</li>
    <li>SVG, Canvas and WebGL support</li>
</ul>

<h5>Core</h5>

<p>The <a href="https://github.com/ucla/WebBlocks/wiki/Subgroup%3A-Core" target="_blank">Core subgroup</a> has prioritized the following features for WebBlocks v1.1:</p>

<ul>
    <li>Existing packages updates and new packages</li>
    <li>Support external package definitions</li>
    <li>Boostrap adapter support for Bootstrap 3</li>
    <li>New configuration options</li>
</ul>

<hr>

<h3>WebBlocks 2</h3>

<p>WebBlocks 2 is currently <span class="badge important">EARLY-STAGE PLANNING AND PROTOTYPING</span></p>

<p>Where WebBlocks 1 grew organically, WebBlocks 2 seeks to reorganize the underlying architecture, continuing to support all of the use cases provided by WebBlocks 1 while simplifying and changing underlying structures to reduce complexity and improve flexibility.</p>

<ul>
    <li><strong>Everything as a module.</strong> The compiler, rake tasks, toolkit and all entity groups each become their own respective repository, linked together under a unified scheme. This does away with the need to separate adapters, extensions, packages and modules, allowing any component to be a full-fledged module with powerful dependency management, compile-time hooks, etc.</li>
    <li><strong>Bower for component management.</strong> Using an industry-standard dependency manager, WebBlocks will recursively build a set of components based on their dependency graphs. When configuring WebBlocks, one will be able to add modules simply by adding dependencies to the Bower file.</li>
    <li><strong>DSL for file-level dependency management.</strong> A single file called <code>Blockfile.rb</code> will define how a module operates through a simple and expressive DSL that replaces the need to write hook-based package handlers and WebBlocks-specific macros within SASS and Javascript files.</li>
    <li><strong>Linking via topological sort.</strong> The file-level dependencies specified by each module's <code>Blockfile.rb</code> shall be converted into a directed acyclic graph and then topologically sorted to determine link order. This replaces the previous convention-based scheme which imposed constraints such as the variable, adapter and definition phases, and it improves performance as the link stack can be decomposed into strongly-coupled file sets, each compiled and cached individually.</li>
    <li><strong>Rest of the process retained but refactored and enhanced.</strong> Other tasks in the compile process shall remain roughly as they are currently. However, some aspects will be refactored, such as Compass possibly being replaced by Bourbon, while features such as <code>watch</code> will be added.</li>
</ul>

<p>Benefits of this approach:</p>

<ul>
    <li><strong>Remove confusion between modular types.</strong> A module is left free to its own auspices to include a third-party package, provide an adapter layer if certain frameworks are enabled, etc. While everything becomes a module, the expressive <code>Blockfile.rb</code> shall allow users to accomplish any use case supported in WebBlocks 1.</li>
    <li><strong>Reduce barriers to entry.</strong> Any framework can be made to support inclusion as a WebBlocks component either by adding a <code>Blockfile</code> or by creating a module that specifies the other framework as a Bower dependency and provides a <code>Blockfile.rb</code> for managing the other framework's assets.</li>
    <li><strong>Simplify extensibility.</strong> By modularizing, any component can be swapped in or out. For example, an application integrating WebBlocks (see <a href='http://localhost/WebBlocks/doc/#Recipe/Integration/Submodule' target='_blank'>Recipe: Submodule Integration</a>) will ont need to call-forward to WebBlocks <code>rake</code> but rather may directly include the WebBlocks rake tasks module.</li>
    <li><strong>Trend towards microframeworks.</strong> Between Bower and the <code>Blockfile.rb</code> file, a module shall be able to completely specify its dependencies. In doing so, a module may compile itself without needing to be loaded into an overarching WebBlocks toolkit project.</li>
    <li><strong>Explicit control in addition to implicit convention.</strong> Each module is free to define its own internals. As an example, a module may choose to support third-party frameworks with adapters or it may bypass this; similarly, a module may choose to separate mixins from definitions, such as in WebBlocks 1, or it may bypass this complexity.</li>
    <li><strong>Compiler performance improvements.</strong> Rather than building a monolithic linker stack, the compiler may compile partials of tightly coupled components and then combine them for a final product.</li>
</ul>

<p>This approach yields a large number of separate modules. For clarity, core modules will be developed as repositories under the <a href='https://github.com/WebBlocks'>WebBlocks organization</a>.</p>

<p>The toolkit, which provides an easy wrapper for the compiler and rake tasks, may be found under <a href='https://github.com/WebBlocks/WebBlocks-toolkit' target='_blank'>WebBlocks/WebBlocks-toolkit</a>, while the compiler is separate under <a href='https://github.com/WebBlocks/WebBlocks-core' target='_blank'>WebBlocks/WebBlocks-core</a> and rake tasks reside under <a href='https://github.com/WebBlocks/WebBlocks-rake'>WebBlocks/WebBlocks-rake</a>. The WebBlocks organization shall also include a set of modules, such as <a href='https://github.com/WebBlocks/WebBlocks-base-visibility'>WebBlocks/WebBlocks-base-visibility</a>, which provide the actual semantics of WebBlocks.</p>

<p>To get involved with WebBlocks 2, see the <a href='https://github.com/WebBlocks/WebBlocks' target='_blank'>WebBlocks/WebBlocks</a> project.</p>
